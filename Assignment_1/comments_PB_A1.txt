Decent report, nice clean script. One mistake in the compiler options and a possible race condition. 85/100. If you address some of the points below by November 5th, I will re-evaluate the assignment and add a maximum of 10 marks.

*UPDATE* Bugs fixed and report updated. Final: 95/100.

Additional comments:
- Use \text or \mbox for in-formula words to change the font (e.g. SpeedUp in equation 1).
- Do not use $\times$ or $\cdot$ or similar for ordinary multiplication.
- "BLAS library offers a much more reliable method" what do you mean by reliable? They both compute the correct product, no? What you should say is that the wall time may be shorter with the double loop and multiple threads, but that method uses much more resources than the BLAS call on one thread. If you think about the FLOPS per core second (#FLOPS/(num_procs X par_wall_time) ) the BLAS call is superior.

* Code:
- Your tests were compromised by the optimization options, "-o1" and -"o3". They should be "-O1" and "-O3". This is case sensitive. Because of this, you did not see a difference between the two and when you though you were using ifort without optimization, it was in fact using the default (I believe it is -O2).
- Many of your tests are obsolete, like running on multiple threads without compiling with the openmp flag, or when using DGEMV. You should explain why you did this and what conclusions you can draw. 
- The inner loop counter j must be made private because it is different for each thread. If it is not private, there can be a race condition (with multiple threads trying to change the value of j).

* Report:
- Check your references. I should be able to find each one within 5 minutes, but this is not the case. [1,3] refer to a whole book, which isn't helpful. [4,5,7] are incomplete (web address? author? publisher?)
- "there still remain tasks..." It is more accurate to state that every time computer become faster/bigger new questions comen within reach.. it will never end!
- "High Performance Computing, in general, refers to..." This is a circular definition, "high performance computing is computing at high performance".
- Check spelling, punctuation and grammar before submitting.
- Try to draw a short conclusion, e.g. "To balance efficiency and speed, one should use either compiler with the BLAS library routine with aggressive optimization" would be justified bsed on your numbers.
